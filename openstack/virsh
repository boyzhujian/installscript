#one line command to install ,need prepare img and bridge br1 first
virt-install  --connect qemu:///system   --virt-type kvm  --name centos7001 \
 --ram 2048 --vcpus 2  --cdrom /mnt/sda2/isofiles/centos7.iso --disk /mnt/sda2/virshimg/centos7001.qcow2 --network bridge=br1  --os-variant rhel7.2



virsh list  --all
virsh start domainname

virsh 

#shell wrapper
#https://github.com/giovtorres/kvm-install-vm

#https://libvirt.org/

virsh

相关命令：暂无相关命令
virsh 是kvm一个管理工具包。virsh提供两种执行模式：”直接模式（Direct Mode）”与”互动模式（Interactive Mode）”。在直接模式里，你必须在Shell中以参数、自变量的方式来执行virsh，如果在互动模式中，则virsh会提供一个提示字符串， 你可以在该提示字符串后，输入要执行的命令。如果执行virsh没有指定任何参数或自变量则默认就是进入互动模式。 与xm一样，COMMAND也是 virsh提供的命令

virsh语法： virsh [COMMAND] [ARGS...]

参数：
    autostart         #自动加载指定的一个虚拟机  
    connect           #重新连接到hypervisor  
    console           #连接到客户会话  
    create            #从一个SML文件创建一个虚拟机  
    start             #开始一个非活跃的虚拟机  
    destroy           #删除一个虚拟机  
    define            #从一个XML文件定义一个虚拟机  
    domid             #把一个虚拟机名或UUID转换为ID  
    domuuid           #把一个郁闷或ID转换为UUID  
    dominfo           #查看虚拟机信息  
    domstate          #查看虚拟机状态  
    domblkstat        #获取虚拟机设备快状态  
    domifstat         #获取虚拟机网络接口状态  
    dumpxml           #XML中的虚拟机信息  
    edit              #编辑某个虚拟机的XML文件  
    list              #列出虚拟机  
    migrate           #将虚拟机迁移到另一台主机  
    quit              #退出非交互式终端  
    reboot            #重新启动一个虚拟机  
    resume            #重新恢复一个虚拟机  
    save              #把一个虚拟机的状态保存到一个文件  
    dump              #把一个虚拟机的内核dump到一个文件中以方便分析  
    shutdown          #关闭一个虚拟机  
    setmem            #改变内存的分配  
    setmaxmem         #改变最大内存限制值  
    suspend           #挂起一个虚拟机  
    vcpuinfo          #虚拟机的cpu信息  
    version           #显示virsh版本  
    
    
  https://wiki.archlinux.org/index.php/Libvirt_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)  
  
  virt-install  \
  --name arch-linux_testing \
  --memory 1024             \ 
  --vcpus=2,maxvcpus=4      \
  --cpu host                \
  --cdrom $HOME/Downloads/arch-linux_install.iso \
  --disk size=2,format=raw  \
  --network user            \
  --virt-type kvm
  
  
  qemu-img create -f qcow2 -o backing_file=<path to backing image>,backing_fmt=qcow2 <disk name> <disk size>
  
  
  
  
  
  http://libvirt.org/devguide.html

