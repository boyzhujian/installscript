#https://docs.docker.com/engine/security/https/
#https://github.com/paulczar/omgwtfssl
#https://serverfault.com/questions/9708/what-is-a-pem-file-and-how-does-it-differ-from-other-openssl-generated-key-file

#.pem and .key file is same ,  .pem is sam as .crt    what a mess thing

//
openssl genrsa -aes256 -out CA.key 2048 
openssl req -new -x509 -days 365 -key CA.key -sha256 -out CA.crt
chmod -v 0400 CA.key 
chmod -v 0444 CA.crt
//


openssl genrsa -aes256 -out ca-key.pem 4096
openssl req -new -x509 -days 365 -key ca-key.pem -sha256 -out ca.pem


openssl genrsa -out server-key.pem 4096
openssl req -subj "/CN=$HOST" -sha256 -new -key server-key.pem -out server.csr
extfile.cnf content 
subjectAltName = DNS:$HOST,IP:10.10.10.20,IP:127.0.0.1 
extendedKeyUsage = serverAuth
openssl x509 -req -days 365 -sha256 -in server.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out server-cert.pem 
-extfile extfile.cnf



openssl genrsa -out key.pem 4096
openssl req -subj '/CN=client' -new -key key.pem -out client.csr
extfile.cnf content 
extendedKeyUsage = clientAuth
openssl x509 -req -days 365 -sha256 -in client.csr -CA ca.pem -CAkey ca-key.pem \
  -CAcreateserial -out cert.pem -extfile extfile.cnf

  
  
chmod -v 0400 ca-key.pem key.pem server-key.pem
chmod -v 0444 ca.pem server-cert.pem cert.pem


usage:
dockerd --tlsverify --tlscacert=ca.pem --tlscert=server-cert.pem --tlskey=server-key.pem -H=0.0.0.0:2376
  
docker --tlsverify --tlscacert=ca.pem --tlscert=cert.pem --tlskey=key.pem -H=$HOST:2376 version
